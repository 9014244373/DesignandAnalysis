#include <stdio.h>

int knapsack(int W, int weights[], int values[], int n) {
    int i, w;
    int K[n + 1][W + 1];

    
    for (i = 0; i <= n; i++) {
        for (w = 0; w <= W; w++) {
            if (i == 0 || w == 0)
                K[i][w] = 0;
            else if (weights[i - 1] <= w)
                K[i][w] = (values[i - 1] + K[i - 1][w - weights[i - 1]]) > K[i - 1][w] ? 
                           (values[i - 1] + K[i - 1][w - weights[i - 1]]) : K[i - 1][w];
            else
                K[i][w] = K[i - 1][w];
        }
    }

    return K[n][W];
}

int main() {
    int n, W, i;

    
    printf("Enter the number of items: ");
    scanf("%d", &n);

    int weights[n], values[n];

    printf("Enter the weights of the items:\n");
    for (i = 0; i < n; i++) {
        scanf("%d", &weights[i]);
    }

    printf("Enter the values of the items:\n");
    for (i = 0; i < n; i++) {
        scanf("%d", &values[i]);
    }

    printf("Enter the weight capacity of the container: ");
    scanf("%d", &W);

    int max_value = knapsack(W, weights, values, n);
    printf("The maximum value that can be put in the container is %d\n", max_value);

    return 0;
}

